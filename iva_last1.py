# -*- coding: utf-8 -*-
"""iva_last1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSCLAVvvlV_vTomfYWjADQ2jiVjW1YMb
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow  # For Google Colab display

# Load the video
video_path = '/content/sample_data/2p.mp4'  # Replace with your video path
cap = cv2.VideoCapture(video_path)

# Initialize background subtractor
fgbg = cv2.createBackgroundSubtractorMOG2()

# Initialize tracking variables
tracker_initialized = False
tracker = cv2.TrackerCSRT_create()  # Replace with a suitable tracker if needed

frame_count = 0  # To limit frame display rate

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Preprocess the frame for better detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    fgmask = fgbg.apply(blurred)

    _, thresh = cv2.threshold(fgmask, 250, 255, cv2.THRESH_BINARY)
    thresh = cv2.dilate(thresh, None, iterations=2)

    # Find contours
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Filter contours by area
    for cnt in contours:
        if 6000 < cv2.contourArea(cnt) < 15000:  # Adjust area range as needed
            x, y, w, h = cv2.boundingRect(cnt)
            if not tracker_initialized:
                # Initialize tracker
                tracker.init(frame, (x, y, w, h))
                tracker_initialized = True

    # Update the tracker
    if tracker_initialized:
        success, box = tracker.update(frame)
        if success:
            p1 = (int(box[0]), int(box[1]))
            p2 = (int(box[0] + box[2]), int(box[1] + box[3]))
            cv2.rectangle(frame, p1, p2, (255, 0, 0), 2)
            cv2.putText(frame, 'Tracked Person', (p1[0], p1[1] - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 0, 0), 2)

    # Display frame (limit for Colab)
    if frame_count % 10 == 0:
        cv2_imshow(frame)

    frame_count += 1

cap.release()
cv2.destroyAllWindows()

