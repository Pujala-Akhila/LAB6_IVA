# -*- coding: utf-8 -*-
"""iva_last6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F4nwcGels6-Kmfuxcb08IauWQShvukAl
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

# Load video from a path or uploaded file
video_path = '/content/sample_data/yelcar.mp4'
cap = cv2.VideoCapture(video_path)

# Background subtractor
fgbg = cv2.createBackgroundSubtractorMOG2()

# Initialize variables
frame_detected_count = 0

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Apply background subtraction to isolate moving objects
    fgmask = fgbg.apply(frame)

    # Pre-process mask
    _, thresh = cv2.threshold(fgmask, 200, 255, cv2.THRESH_BINARY)

    # Morphological operations to clean up the mask
    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (5, 5))
    clean_mask = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)

    # Find contours of detected areas
    contours, _ = cv2.findContours(clean_mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    yellow_car_detected = False  # Flag to check if a yellow car is detected in the current frame

    for contour in contours:
        # Filter by contour area to ignore small detections
        if 5000 < cv2.contourArea(contour) < 10000:  # Adjust the area range as needed
            x, y, w, h = cv2.boundingRect(contour)
            car_roi = frame[y:y+h, x:x+w]

            # Convert the region of interest to HSV and detect yellow color
            hsv = cv2.cvtColor(car_roi, cv2.COLOR_BGR2HSV)
            mask_yellow = cv2.inRange(hsv, (35, 100, 100), (35, 255, 255))  # Adjust for specific yellow tone

            # Check if the mask indicates the presence of yellow color
            if np.sum(mask_yellow) > 5000:  # Ensure a significant amount of yellow is detected
                # Draw a rectangle and label the detected car
                cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
                cv2.putText(frame, "Yellow Car", (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
                yellow_car_detected = True

    # Display the frame if a yellow car was detected
    if yellow_car_detected:
        frame_detected_count += 1
        cv2_imshow(frame)

cap.release()
print("Total number of frames where yellow cars were detected:", frame_detected_count)